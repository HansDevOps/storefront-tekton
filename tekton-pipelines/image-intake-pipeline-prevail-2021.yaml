apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: image-intake-pipeline-prevail-2021
spec:
  params:
    - default: 'registry.access.redhat.com/ubi8/ubi:8.0'
      description: The URL of the image that we want to scan and import into the tools-images project.
      name: image-url
      type: string
    - default: "ubi"
      description: The name of image stream where the image will be imported.
      name: image-name
      type: string 
    - default: "8.0"
      description: The tag of image stream where the image will be imported.
      name: image-tag
      type: string             
    - default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      description: The threshold where the trivy scan fill fail the pipeline.
      name: trivy-severity
      type: string    
    - default: "true"
      description: Whether or not to scan the image.
      name: scan-image
      type: string
    - name: insecure
      default: "false"   
      description: "whether or not we accept self-signed certs as on CRC"
      type: string
    - name: registry-is-internal
      default: "false"   
      description: "whether or not we are using the openshift internal registry"
      type: string
    - name: src-namespace
      default: "tools"   
      description: "where the src image lives when we are importing from the internal registry"
      type: string      
  tasks:
    - name: scan-image
      taskRef:
        name: ibm-img-scan-trivy
      params:
      - name: image-url
        value: $(params.image-url)
      - name: scan-image
        value: $(params.scan-image)  
      - name: TRIVY_SEVERITY
        value: $(params.trivy-severity)
    - name: import-image
      params:
        - name: SCRIPT
          value: |
            #!/bin/bash -e

            set -xv

            oc whoami
            oc projects

            echo "importing image-url: $(params.image-url)"
            echo "image-name: $(params.image-name)"
            echo "image-tag: $(params.image-tag)"
            echo "insecure: $(params.insecure)"
            echo "registry-is-internal: $(params.registry-is-internal)"

            oc project tools-images

            if [[ "$(params.registry-is-internal)" == "true" ]] ; then

              echo "tag from internal registry"

              source=$(params.src-namespace)/$(params.image-name):$(params.image-tag)
              target=tools-images/$(params.image-name):$(params.image-tag)
              oc tag ${source} ${target}               

            else

              echo "import from external registry"

              oc import-image $(params.image-name):$(params.image-tag) \
              --from=$(params.image-url) \
              --reference-policy=local \
              --insecure=$(params.insecure) \
              --confirm

            fi

            # The Golden Guidance:
            #source=pipelines/$(params.image-name):$(params.image-tag)
            source=tools-images/$(params.image-name):$(params.image-tag)
            target=tools-images/$(params.image-name):for-use
            oc tag ${source} ${target} 

            # note to author: the visual tekton task has an option to supply a git repo to clone. 
            # I have removed that repo in this manifestation of the openshift-client resource.

        - name: ARGS
          value:
            - ""
      runAfter:
        - scan-image
      taskRef:
        kind: ClusterTask
        name: openshift-client  

